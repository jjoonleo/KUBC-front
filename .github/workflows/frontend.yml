name: Frontend Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "public/**"
      - "package.json"
      - "package-lock.json"
      - "deployment/**"

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create required directories on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            sudo mkdir -p /home/ubuntu/app/deployment/docker-compose
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app
            sudo chmod -R 755 /home/ubuntu/app

      - name: Copy deployment files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          source: "deployment/docker-compose/*"
          target: "/home/ubuntu/app"

      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          envs: NODE_ENV,REACT_APP_API_BASE_URL,REACT_APP_NAVER_LOGIN_ENDPOINT
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          REACT_APP_API_BASE_URL: ${{ vars.REACT_APP_API_BASE_URL }}
          REACT_APP_NAVER_LOGIN_ENDPOINT: ${{ vars.REACT_APP_NAVER_LOGIN_ENDPOINT }}
          COMPOSE_PROJECT_NAME: ${{ vars.COMPOSE_PROJECT_NAME }}
          script: |
            cd /home/ubuntu/app

            # Clean up any existing containers
            echo "Stopping and removing existing frontend containers..."
            sudo docker stop frontend || true
            sudo docker rm frontend || true

            # Kill any processes using port 3000
            echo "Checking for processes using port 3000..."
            sudo lsof -ti:3000 | xargs sudo kill -9 || true

            # Clean up docker system
            sudo docker system prune -f

            # Stop and remove containers managed by docker-compose
            sudo docker compose -f deployment/docker-compose/compose.yml down

            # Pull latest images
            sudo docker compose -f deployment/docker-compose/compose.yml pull

            # Start services with environment variables
            sudo NODE_ENV="$NODE_ENV" \
                 REACT_APP_API_BASE_URL="$REACT_APP_API_BASE_URL" \
                 REACT_APP_NAVER_LOGIN_ENDPOINT="$REACT_APP_NAVER_LOGIN_ENDPOINT" \
                 docker compose -f deployment/docker-compose/compose.yml up -d --build
